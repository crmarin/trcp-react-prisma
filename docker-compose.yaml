version: '3.8'

services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend_pms
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    ports:
      - 4000:${PORT}
    volumes:
      - ./server:/usr/src/app
      - ./prisma:/usr/src/app/prisma
    command: npm run dev
    depends_on:
      - db
    networks:
      - back_net

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend_pms
    env_file: .env
    environment:
      TZ: America/Bogota
    ports:
      - 5173:5173
    volumes:
      - ./client:/usr/src/app
    command: npm run dev
    depends_on:
      - backend
    networks:
      - front_net

  db:
    container_name: db_pms
    env_file: .env
    image: postgres:14.3
    ports:
      - '5434:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      TZ: America/Bogota
    networks:
      - back_net

  nginx:
    container_name: nginx_pms
    image: nginx:latest
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - front_net
      - back_net

volumes:
  db-data:
  cache:
    driver: local

networks:
  front_net:
  back_net:
